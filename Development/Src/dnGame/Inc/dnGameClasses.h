/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
    Copyright 1998-2011 Epic Games, Inc. All Rights Reserved.
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif

#include "dnGameNames.h"

// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)

#ifndef INCLUDED_DNGAME_ENUMS
#define INCLUDED_DNGAME_ENUMS 1


#endif // !INCLUDED_DNGAME_ENUMS
#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

#ifndef INCLUDED_DNGAME_CLASSES
#define INCLUDED_DNGAME_CLASSES 1
#define ENABLE_DECLARECLASS_MACRO 1
#include "UnObjBas.h"
#undef ENABLE_DECLARECLASS_MACRO

class AdnSinglePlayer : public AUTGame
{
public:
    //## BEGIN PROPS dnSinglePlayer
    //## END PROPS dnSinglePlayer

    DECLARE_CLASS(AdnSinglePlayer,AUTGame,0|CLASS_Config,dnGame)
    NO_DEFAULT_CONSTRUCTOR(AdnSinglePlayer)
};

class AdnWeapon : public AUTWeapon
{
public:
    //## BEGIN PROPS dnWeapon
    //## END PROPS dnWeapon

    DECLARE_ABSTRACT_CLASS(AdnWeapon,AUTWeapon,0|CLASS_Config,dnGame)
	UBOOL Tick( FLOAT DeltaSeconds, ELevelTick TickType );
};

class APistol : public AdnWeapon
{
public:
    //## BEGIN PROPS Pistol
    //## END PROPS Pistol

    DECLARE_CLASS(APistol,AdnWeapon,0|CLASS_Config,dnGame)
    NO_DEFAULT_CONSTRUCTOR(APistol)
};

class ADukeHUD : public AHUD
{
public:
    //## BEGIN PROPS DukeHUD
    INT CrosshairCount;
    class UTexture* CrosshairTextures[20];
    //## END PROPS DukeHUD

    virtual void HudStartup();
    virtual void RenderHud();
    DECLARE_FUNCTION(execHudStartup)
    {
        P_FINISH;
        this->HudStartup();
    }
    DECLARE_FUNCTION(execRenderHud)
    {
        P_FINISH;
        this->RenderHud();
    }
    DECLARE_CLASS(ADukeHUD,AHUD,0|CLASS_Transient|CLASS_Config,dnGame)
	void DrawCrosshair();
};

class APlayerPawn : public AUTPawn
{
public:
    //## BEGIN PROPS PlayerPawn
    //## END PROPS PlayerPawn

    DECLARE_CLASS(APlayerPawn,AUTPawn,0|CLASS_Config|CLASS_NativeReplication,dnGame)
    NO_DEFAULT_CONSTRUCTOR(APlayerPawn)
};

#undef DECLARE_CLASS
#undef DECLARE_CASTED_CLASS
#undef DECLARE_ABSTRACT_CLASS
#undef DECLARE_ABSTRACT_CASTED_CLASS
#endif // !INCLUDED_DNGAME_CLASSES
#endif // !NAMES_ONLY

AUTOGENERATE_FUNCTION(ADukeHUD,-1,execRenderHud);
AUTOGENERATE_FUNCTION(ADukeHUD,-1,execHudStartup);

#ifndef NAMES_ONLY
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef DNGAME_NATIVE_DEFS
#define DNGAME_NATIVE_DEFS

#define AUTO_INITIALIZE_REGISTRANTS_DNGAME \
	AdnSinglePlayer::StaticClass(); \
	AdnWeapon::StaticClass(); \
	APistol::StaticClass(); \
	ADukeHUD::StaticClass(); \
	GNativeLookupFuncs.Set(FName("DukeHUD"), GdnGameADukeHUDNatives); \
	APlayerPawn::StaticClass(); \

#endif // DNGAME_NATIVE_DEFS

#ifdef NATIVES_ONLY
FNativeFunctionLookup GdnGameADukeHUDNatives[] = 
{ 
	MAP_NATIVE(ADukeHUD, execRenderHud)
	MAP_NATIVE(ADukeHUD, execHudStartup)
	{NULL, NULL}
};

#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_SIZE_NODIE(AdnSinglePlayer)
VERIFY_CLASS_SIZE_NODIE(AdnWeapon)
VERIFY_CLASS_SIZE_NODIE(APistol)
VERIFY_CLASS_OFFSET_NODIE(ADukeHUD,DukeHUD,CrosshairCount)
VERIFY_CLASS_OFFSET_NODIE(ADukeHUD,DukeHUD,CrosshairTextures)
VERIFY_CLASS_SIZE_NODIE(ADukeHUD)
VERIFY_CLASS_SIZE_NODIE(APlayerPawn)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
